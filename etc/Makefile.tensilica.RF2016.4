# Makefile configuration for building XTSC examples
#
# Customer ID=7508; Build=0x4d27e; Copyright (c) 2005-2014 Tensilica Inc.  ALL RIGHTS RESERVED.
# 
# These coded instructions, statements, and computer programs are the
# copyrighted works and confidential proprietary information of
# Tensilica Inc.  They may be adapted and modified by bona fide
# purchasers for internal use, but neither the original nor any adapted
# or modified version may be disclosed or distributed to third parties
# in any manner, medium, or form, in whole or in part, without the prior
# written consent of Tensilica Inc.

# NOTE: Multiple variants of ISS/XTSC libraries, when available and installed, will be found inside XTTOOLS in
#       a directory that depends on the compiler and SystemC version used.  For example:
# lib/iss:                         directory contains 32-bit libraries compatible with gcc 4.4.X using SystemC 2.3.0
# lib/iss-GCC-4.1:                 directory contains 32-bit libraries compatible with gcc 4.1.X using SystemC 2.3.0
# lib64/iss:                       directory contains 64-bit libraries compatible with gcc 4.4.X using SystemC 2.3.0
# lib64/iss-GCC-4.1:               directory contains 64-bit libraries compatible with gcc 4.1.X using SystemC 2.3.0
# lib/iss/systemc-2.2.0:           directory contains 32-bit libraries compatible with gcc 4.4.X using SystemC 2.2.0
# lib/iss-GCC-4.1/systemc-2.2.0:   directory contains 32-bit libraries compatible with gcc 4.1.X using SystemC 2.2.0
# lib64/iss/systemc-2.2.0:         directory contains 64-bit libraries compatible with gcc 4.4.X using SystemC 2.2.0
# lib64/iss-GCC-4.1/systemc-2.2.0: directory contains 64-bit libraries compatible with gcc 4.1.X using SystemC 2.2.0

# NOTE: Each of the above directories contains a version of xtsc-run linked against the XTSC libraries in that 
#       directory.  Exception:  The version of xtsc-run linked using the XTSC libraries in lib/iss is found in 
#       the bin directory.

# NOTE: When using this make file to compile sc_main, the iss or iss-GCC-4.1 directory is chosen based upon the g++
#       version found on your path.  When using this make file to run xtsc-run, the xtsc-run version used is the one
#       on your path.

# NOTE: By default, 32-bit binaries are built.  If you are on a 64-bit version of Linux and wish to build 64-bit
#       binaries, uncomment the following line to define XTSC_64BIT or pass XTSC_64BIT=1 to make.

# XTSC_64BIT   = 1

# NOTE: If desired, you can use SystemC 2.2.0 when compiling the simulator by defining
#       XTSC_USE_SYSTEMC_2_2_0.  If compiling one of the *.plugin examples and then
#       running it using xtsc-run then you must also ensure that the xtsc-run on your
#       path is from the appropriate systemc-2.2.0 sub-directory listed above.

# NOTE: If desired, you can use the shared library version of SystemC by defining
#       XTSC_USE_SHARED_LIBRARY.

# NOTE: If desired, you can use a static version of the original OSCI SystemC 2.2.0
#       or 2.2.0 library that you compiled (source available from www.accellera.org).  
#       To use your compiled version of one of the SystemC libraries, define
#       XTSC_USE_OSCI and set the SYSTEMC_INC, TLM2_INC, SYSTEMC_LIB_PATH, and 
#       SYSTEMC_LIBS macros according to your setup (also define XTSC_USE_SYSTEMC_2_2_0
#       if applicable).  Do NOT define XTSC_USE_SHARED_LIBRARY.

# NOTE: See the "Getting Started" Chapter in the XTSC User's Guide (xtsc_ug.pdf).

# XTSC_USE_OSCI           = 1
# XTSC_USE_SYSTEMC_2_2_0  = 1
# XTSC_USE_SHARED_LIBRARY = 1

# NOTE: Using the -libdebug flag when building the example TDK makes TIE wires visible
#       to xt-gdb and Xplorer when running the Xtensa Instruction Set Simulator; however,
#       this can slow down simulation speed.  If desired, comment out the following line
#       to disable TIE wire visibility.
TCFLAGS            = -libdebug

ifneq ($(XTSC_PLUGIN),) # {
XTSC_USE_SHARED_LIBRARY = 1
endif # }

SYSTEMC_INC        = 
TLM2_INC           =
SYSTEMC_LIB_PATH   = 
SYSTEMC_LIBS       = 

XTSC_LIB_PATH      = -L $(XTTOOLS)/$(LIBDIR)/$(ISSDIR)
CXX                = g++
ARCH_FLAGS         = -m32
TOOLS_SUFFIX       = 
LIB_SUFFIX         = 
ISS_SUFFIX         = -UNKNOWN_GCC_VERSION

ifeq ($(findstring 4.4.,$(shell $(CXX) -dumpversion)),4.4.)
ISS_SUFFIX         = 
endif
ifeq ($(findstring 4.1.,$(shell $(CXX) -dumpversion)),4.1.)
ISS_SUFFIX         = -GCC-4.1
endif

ifdef XTSC_64BIT
TOOLS_SUFFIX       = -64
LIB_SUFFIX         = 64
ARCH_FLAGS         = -m64 -fPIC
EXTRA_TC_FLAGS     = -x86_64
endif


LIBDIR             = lib$(LIB_SUFFIX)
ISSDIR             = iss$(ISS_SUFFIX)
XTSC_RUN           = xtsc-run

ifeq ($(XTSC_USE_OSCI),) # {
SYSTEMC_INC        = -I $(XTTOOLS)/include/systemc-2.3.0-static
TLM2_INC           =
SYSTEMC_LIB_PATH   = 
ifneq ($(XTSC_USE_SHARED_LIBRARY),) # {
SYSTEMC_LIBS       = -l systemc_sh
ifneq ($(XTSC_USE_SYSTEMC_2_2_0),) # {
SYSTEMC_INC        = -I $(XTTOOLS)/include/systemc-2.2.0-shared
TLM2_INC           = -I $(XTTOOLS)/include/tlm
XTSC_LIB_PATH      = -L $(XTTOOLS)/$(LIBDIR)/$(ISSDIR)/systemc-2.2.0
XTSC_RPATH         = -Wl,-rpath,$(XTTOOLS)/$(LIBDIR)/$(ISSDIR)/systemc-2.2.0
else # } {
SYSTEMC_INC        = -I $(XTTOOLS)/include/systemc-2.3.0-shared
endif # }
else # } {
SYSTEMC_LIBS       = -l systemc
ifneq ($(XTSC_USE_SYSTEMC_2_2_0),) # {
SYSTEMC_INC        = -I $(XTTOOLS)/include/systemc-2.2.0-static
TLM2_INC           = -I $(XTTOOLS)/include/tlm
XTSC_LIB_PATH      = -L $(XTTOOLS)/$(LIBDIR)/$(ISSDIR)/systemc-2.2.0
endif # }
endif # }
endif # }

XTTOOLS            = $(XTENSA_HOME)/XtensaTools
TOOLS              = $(XTTOOLS)/Tools
TDK_DIR            = ../TIE/example.tdk


XTENSA_XMP_ROOT    = ../XMP
XTENSA_XMP_XSYS    = $(XTENSA_XMP_ROOT)/$(SYSTEM).xsys
XTENSA_XMP_SYSTEM  = $(XTENSA_XMP_ROOT)/sys-x86-linux/$(SYSTEM)
XTENSA_XMP_PACKAGE = $(XTENSA_XMP_SYSTEM)/package
XTENSA_XMP_DEFS    = $(XTENSA_XMP_PACKAGE)/sys-defs.mk
XTENSA_XMP_CORES   = $(XTENSA_XMP_PACKAGE)/cores
XMP_XTENSA_SYSTEM  = $(XTENSA_XMP_PACKAGE)/config


ifdef RUNARGS
FWD_RUNARGS        =RUNARGS="$(RUNARGS)"
endif

TARGET_CXX         = $(XTTOOLS)/bin/xt-xcc
TARGET_CFLAGS      = -g $(CUSTOM_TARGET_CFLAGS)
TARGET_LIBS        = -lm

LINK               = $(CXX)
DEBUG_CXXFLAGS     = -UNDEBUG -DDEBUG -Wall -O0 -g
#DEBUG_CXXFLAGS    = -DNDEBUG -UDEBUG -Wall -O3
COMMON_CXXFLAGS    = $(ARCH_FLAGS) -c $(DEBUG_CXXFLAGS) -Wno-parentheses
LDFLAGS            = $(ARCH_FLAGS)
LDOUT              = -o 
OBJ                = o
EXE                = 

ifneq ($(XTSC_USE_SHARED_LIBRARY),) # {
XTSC_LIB_VER       = _sh
endif # }

ISS_LIB_PATH       = -L $(XTTOOLS)/$(LIBDIR)/$(ISSDIR)
LIB_PATH           = -L $(XTTOOLS)/$(LIBDIR)

INCLUDES           = \
        -I $(XTTOOLS)/include \
        $(SYSTEMC_INC) \
        $(TLM2_INC)

XTENSA_LIBS        = \
        -l xtsc$(XTSC_LIB_VER) \
        -l xtsc_comp$(XTSC_LIB_VER) \
        -l xtmp \
        -l log4xtensa \
        -l lua \
        -l xtparams

RUN_TIME_PATH      = $(XTSC_RPATH)
RUN_TIME_PATH     += -Wl,-rpath,$(XTTOOLS)/$(LIBDIR)/$(ISSDIR)
RUN_TIME_PATH     += -Wl,-rpath,$(XTTOOLS)/$(LIBDIR)
ifneq ($(ISS_SUFFIX),-GCC-4.1)
RUN_TIME_PATH     += -Wl,-rpath,$(TOOLS)$(TOOLS_SUFFIX)/$(LIBDIR)
endif

D                  = -D

LIBS               = $(SYSTEMC_LIB_PATH) $(XTSC_LIB_PATH) $(ISS_LIB_PATH) $(LIB_PATH) $(RUN_TIME_PATH) $(XTENSA_LIBS) $(SYSTEMC_LIBS)
DEFINES            = \
        $(D) CONFIG_NAME=\"$(XTENSA_CORE)\" \
        $(D) XTENSA_REGISTRY=\"$(XTENSA_SYSTEM)\" \
        $(D) TDK_DIR=\"$(TDK_DIR)\" \
        $(ADDITIONAL_DEFINES)

CXXFLAGS           = $(INCLUDES) $(DEFINES) $(COMMON_CXXFLAGS)

TEST_MAKE_TARGET   = run

HOST_SOURCES       = $(HOST_OBJECTS:.o=.cpp)



BASE_NAME         := $(EXAMPLE_NAME)
RM                 = rm -f
RMDIR              = rm -rf

ifneq ($(XTSC_USE_OSCI),) # {
ifneq ($(XTSC_USE_SHARED_LIBRARY),) # {
$(error In this Makefile, a shared library version of XTSC (including xtsc-run) may only be used with a shared library version of OSCI SystemC supplied by Tensilica.)
endif # }
endif # }

