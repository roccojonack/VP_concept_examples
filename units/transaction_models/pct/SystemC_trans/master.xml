<?xml version="1.0" encoding="ASCII"?>
<pct_data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="schema.xsd">
 <version>3.0</version>
 <fingerprint>8eea402c327cb7ff54c6845b65fe75da9baac259</fingerprint>
 <library>
  <name>master</name>
  <examples/>
  <protocols>
   <protocol>
    <name>tlm2_gp</name>
    <library_reference>TLM2_PROTOCOLS</library_reference>
    <documentation_file>${CWR_TLM2_PL}/Documentation/IP_TLM2_PL/IP_TLM2_PL_pro_3.html</documentation_file>
    <lib_documentation_file>${CWR_TLM2_PL}/Documentation/IP_TLM2_PL/IP_TLM2_PL_pre_2.html</lib_documentation_file>
    <fingerprint>9393aecde8d8ec47e3f99d4cdff3cc707ff6bc67</fingerprint>
    <tcl_file>${CWR_TLM2_PROTOCOLS}/Internal/script/pct_callbacks.tcl</tcl_file>
    <tcl_proc>::TLM2_PROTOCOLS::protocol_parameter_mismatch_cb</tcl_proc>
    <common_parameters>
     <parameter>
      <name>address_width</name>
      <value>
       <type>sfIntegerParameter</type>
       <default>32</default>
       <visibility>Assembly</visibility>
       <editability>until_simulation_build</editability>
      </value>
     </parameter>
     <parameter>
      <name>data_width</name>
      <value>
       <type>sfIntegerParameter</type>
       <default>32</default>
       <visibility>Assembly</visibility>
       <editability>until_simulation_build</editability>
      </value>
     </parameter>
     <parameter>
      <name>N</name>
      <value>
       <type>sfIntegerParameter</type>
       <default>1</default>
       <visibility>Assembly</visibility>
       <editability>until_simulation_build</editability>
      </value>
     </parameter>
     <parameter>
      <name>pol</name>
      <value>
       <type>sfStringParameter</type>
       <default>sc_core::SC_ONE_OR_MORE_BOUND</default>
       <quoted>false</quoted>
       <string_restrict>
        <item>sc_core::SC_ZERO_OR_MORE_BOUND</item>
        <item>sc_core::SC_ONE_OR_MORE_BOUND</item>
        <item>sc_core::SC_ALL_BOUND</item>
       </string_restrict>
       <visibility>Assembly</visibility>
       <editability>until_simulation_build</editability>
      </value>
     </parameter>
     <parameter>
      <name>ft_protocol_tag</name>
      <value>
       <type>sfStringParameter</type>
       <default>TLM2_GP</default>
       <quoted>false</quoted>
       <string_restrict>
        <item>TLM2_GP</item>
        <item>AXI</item>
        <item>GFT</item>
        <item>NTTP</item>
        <item>AXI4Stream</item>
       </string_restrict>
       <visibility>Assembly</visibility>
       <editability>until_simulation_build</editability>
      </value>
     </parameter>
    </common_parameters>
    <address_width>
     <value>#address_width</value>
    </address_width>
    <data_width>
     <value>#data_width</value>
    </data_width>
    <tlm_implementation>
     <implementation_name>TLM</implementation_name>
     <initiator_socket_base_type>
      <datatype>tlm::tlm_base_initiator_socket&lt;#data_width, tlm::tlm_fw_transport_if&lt;tlm::tlm_base_protocol_types>, tlm::tlm_bw_transport_if&lt;tlm::tlm_base_protocol_types>, #N, #pol></datatype>
      <include>tlm.h</include>
      <stubtype>conf::tlm_initiator_socket_stub&lt;#data_width, tlm::tlm_base_protocol_types, #N, #pol></stubtype>
      <interface_direction>InOut</interface_direction>
      <interface_masterslaveness>Slave</interface_masterslaveness>
      <port_direction>InOut</port_direction>
      <port_masterslaveness>Master</port_masterslaveness>
     </initiator_socket_base_type>
     <target_socket_base_type>
      <datatype>tlm::tlm_base_target_socket&lt;#data_width, tlm::tlm_fw_transport_if&lt;tlm::tlm_base_protocol_types>, tlm::tlm_bw_transport_if&lt;tlm::tlm_base_protocol_types>, #N, #pol></datatype>
      <include>tlm.h</include>
      <stubtype>conf::tlm_target_socket_stub&lt;#data_width, tlm::tlm_base_protocol_types, #N, #pol></stubtype>
      <interface_direction>InOut</interface_direction>
      <interface_masterslaveness>Slave</interface_masterslaveness>
      <port_direction>InOut</port_direction>
      <port_masterslaveness>Master</port_masterslaveness>
     </target_socket_base_type>
    </tlm_implementation>
   </protocol>
  </protocols>
  <blocks>
   <block>
    <name>master</name>
    <shape>0</shape>
    <background_color>
     <value>-1</value>
    </background_color>
    <ports>
     <port io_id="1">
      <name>initiator_socket</name>
      <category>MEMORY</category>
      <abstraction_level>BCA</abstraction_level>
      <cardinality>one</cardinality>
      <addressing_mode>BYTE</addressing_mode>
      <bca_cosim_supported>false</bca_cosim_supported>
      <master/>
      <inout/>
      <possible_protocols>
       <protocol>
        <description>tlm2_gp</description>
       </protocol>
      </possible_protocols>
      <target_location_info>
       <nr_of_remap_states>1</nr_of_remap_states>
      </target_location_info>
      <kinds>
       <kind>sc_port</kind>
       <kind>sc_export</kind>
      </kinds>
     </port>
    </ports>
    <encapsulations>
     <encapsulation io_id="2">
      <class_name>master</class_name>
      <real_class_name>master</real_class_name>
      <constructors>
       <constructor io_id="3"/>
      </constructors>
      <default_constructor>master()</default_constructor>
      <ports>
       <tlm_port>
        <name>initiator_socket</name>
        <port_type>initiatorsocket</port_type>
        <type_definition>tlm::tlm_base_initiator_socket&lt;unsigned int BUSWIDTH = 32, typename FW_IF = tlm::tlm_fw_transport_if&lt;tlm::tlm_base_protocol_types>, typename BW_IF = tlm::tlm_bw_transport_if&lt;tlm::tlm_base_protocol_types>, int N = 1, enum sc_core::sc_port_policy { sc_core::SC_ONE_OR_MORE_BOUND = 0, sc_core::SC_ZERO_OR_MORE_BOUND = 1, sc_core::SC_ALL_BOUND = 2 } POL = sc_core::SC_ONE_OR_MORE_BOUND></type_definition>
        <type_definition>int</type_definition>
        <datatype>
         <value>tlm::tlm_base_initiator_socket&lt;32, tlm::tlm_fw_transport_if&lt;tlm::tlm_base_protocol_types>, tlm::tlm_bw_transport_if&lt;tlm::tlm_base_protocol_types>, 1, sc_core::SC_ONE_OR_MORE_BOUND></value>
        </datatype>
        <sc_port_type_regular_port/>
        <interfaces>
         <parameter>
          <name>Used_SystemC_Interface</name>
          <value>
           <type>sfTypeParameter</type>
           <default>int</default>
          </value>
         </parameter>
        </interfaces>
       </tlm_port>
      </ports>
      <mappings>
       <tlm_mapping>
        <block_port>initiator_socket</block_port>
        <encap_port>initiator_socket</encap_port>
       </tlm_mapping>
      </mappings>
      <encap_prots>
       <encap_prot>
        <port_ref>
         <io_reference>1</io_reference>
        </port_ref>
        <protocol>
         <description>tlm2_gp</description>
         <parameters_set>
          <parameters_value>
           <name>Protocol Common Parameters</name>
           <parameter_list>
            <parameter_value name="data_width" value="32" read_only="true"/>
            <parameter_value name="N" value="1" read_only="true"/>
            <parameter_value name="pol" value="sc_core::SC_ONE_OR_MORE_BOUND" read_only="true"/>
           </parameter_list>
          </parameters_value>
          <parameters_value>
           <name>Protocol TLM properties</name>
           <parameter_list>
            <parameter_value name="Port type" value="initiatorsocket" read_only="true"/>
           </parameter_list>
          </parameters_value>
         </parameters_set>
         <sc_interfaces>
          <abstraction_level>TLM</abstraction_level>
          <parameters_value>
           <name>Protocol TLM Interfaces</name>
           <parameter_list>
            <parameter_value name="Used_SystemC_Interface" value="int"/>
           </parameter_list>
          </parameters_value>
         </sc_interfaces>
        </protocol>
       </encap_prot>
      </encap_prots>
      <encap_language>SystemC</encap_language>
      <configurations>
       <configuration>
        <name>FromSource</name>
        <class>
         <name>package</name>
         <setting>
          <name>inno_runtime</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>scampi</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>header_file</name>
          <setting_value>
           <value>../../source/SystemC_trans/master.h</value>
          </setting_value>
         </setting>
         <setting>
          <name>include_path</name>
          <setting_value>
           <value>../../source/SystemC_trans</value>
          </setting_value>
         </setting>
        </class>
        <class>
         <name>build</name>
         <setting>
          <name>enabled</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>debug</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>optimized</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>assertions</name>
          <setting_value>
           <value>1</value>
          </setting_value>
         </setting>
         <setting>
          <name>dynamic_library</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>inno_runtime</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>scampi</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
        </class>
       </configuration>
      </configurations>
      <default_configuration>FromSource</default_configuration>
     </encapsulation>
    </encapsulations>
    <dictionary/>
   </block>
   <block>
    <name>slave</name>
    <shape>0</shape>
    <ports>
     <port io_id="4">
      <name>target_socket</name>
      <category>MEMORY</category>
      <abstraction_level>BCA</abstraction_level>
      <cardinality>one</cardinality>
      <addressing_mode>BYTE</addressing_mode>
      <bca_cosim_supported>false</bca_cosim_supported>
      <slave/>
      <inout/>
      <possible_protocols>
       <protocol>
        <description>tlm2_gp</description>
       </protocol>
      </possible_protocols>
      <target_location_info>
       <nr_of_remap_states>1</nr_of_remap_states>
      </target_location_info>
      <kinds>
       <kind>sc_port</kind>
       <kind>sc_export</kind>
      </kinds>
     </port>
    </ports>
    <encapsulations>
     <encapsulation io_id="5">
      <class_name>slave</class_name>
      <real_class_name>slave</real_class_name>
      <constructors>
       <constructor io_id="6"/>
      </constructors>
      <default_constructor>slave()</default_constructor>
      <ports>
       <tlm_port>
        <name>target_socket</name>
        <port_type>targetsocket</port_type>
        <type_definition>tlm::tlm_base_target_socket&lt;unsigned int BUSWIDTH = 32, typename FW_IF = tlm::tlm_fw_transport_if&lt;tlm::tlm_base_protocol_types>, typename BW_IF = tlm::tlm_bw_transport_if&lt;tlm::tlm_base_protocol_types>, int N = 1, enum sc_core::sc_port_policy { sc_core::SC_ONE_OR_MORE_BOUND = 0, sc_core::SC_ZERO_OR_MORE_BOUND = 1, sc_core::SC_ALL_BOUND = 2 } POL = sc_core::SC_ONE_OR_MORE_BOUND></type_definition>
        <type_definition>int</type_definition>
        <datatype>
         <value>tlm::tlm_base_target_socket&lt;32, tlm::tlm_fw_transport_if&lt;tlm::tlm_base_protocol_types>, tlm::tlm_bw_transport_if&lt;tlm::tlm_base_protocol_types>, 1, sc_core::SC_ONE_OR_MORE_BOUND></value>
        </datatype>
        <sc_port_type_regular_port/>
        <interfaces>
         <parameter>
          <name>Used_SystemC_Interface</name>
          <value>
           <type>sfTypeParameter</type>
           <default>int</default>
          </value>
         </parameter>
        </interfaces>
       </tlm_port>
      </ports>
      <mappings>
       <tlm_mapping>
        <block_port>target_socket</block_port>
        <encap_port>target_socket</encap_port>
       </tlm_mapping>
      </mappings>
      <encap_prots>
       <encap_prot>
        <port_ref>
         <io_reference>4</io_reference>
        </port_ref>
        <protocol>
         <description>tlm2_gp</description>
         <parameters_set>
          <parameters_value>
           <name>Protocol Common Parameters</name>
           <parameter_list>
            <parameter_value name="data_width" value="32" read_only="true"/>
            <parameter_value name="N" value="1" read_only="true"/>
            <parameter_value name="pol" value="sc_core::SC_ONE_OR_MORE_BOUND" read_only="true"/>
           </parameter_list>
          </parameters_value>
          <parameters_value>
           <name>Protocol TLM properties</name>
           <parameter_list>
            <parameter_value name="Port type" value="targetsocket" read_only="true"/>
           </parameter_list>
          </parameters_value>
         </parameters_set>
         <sc_interfaces>
          <abstraction_level>TLM</abstraction_level>
          <parameters_value>
           <name>Protocol TLM Interfaces</name>
           <parameter_list>
            <parameter_value name="Used_SystemC_Interface" value="int"/>
           </parameter_list>
          </parameters_value>
         </sc_interfaces>
        </protocol>
       </encap_prot>
      </encap_prots>
      <encap_language>SystemC</encap_language>
      <configurations>
       <configuration>
        <name>FromSource</name>
        <class>
         <name>package</name>
         <setting>
          <name>inno_runtime</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>scampi</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>header_file</name>
          <setting_value>
           <value>../../source/SystemC_trans/slave.h</value>
          </setting_value>
         </setting>
         <setting>
          <name>include_path</name>
          <setting_value>
           <value>../../source/SystemC_trans</value>
          </setting_value>
         </setting>
        </class>
        <class>
         <name>build</name>
         <setting>
          <name>enabled</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>debug</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>optimized</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>assertions</name>
          <setting_value>
           <value>1</value>
          </setting_value>
         </setting>
         <setting>
          <name>dynamic_library</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>inno_runtime</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
         <setting>
          <name>scampi</name>
          <setting_value>
           <value>0</value>
          </setting_value>
         </setting>
        </class>
       </configuration>
      </configurations>
      <default_configuration>FromSource</default_configuration>
     </encapsulation>
    </encapsulations>
    <dictionary/>
   </block>
  </blocks>
 </library>
</pct_data>
